deploy:
  stage: deploy
  image: php:7.4-cli  # Using PHP 7.4 for compatibility
  before_script:
    # Install necessary tools
    - apt-get update && apt-get install -y unzip lftp git
    # Download and configure Composer
    - curl -sS --retry 3 --retry-delay 5 https://getcomposer.org/composer.phar -o /usr/local/bin/composer
    - chmod +x /usr/local/bin/composer
    # Enable required PHP extensions
    - docker-php-ext-install pdo pdo_mysql exif && docker-php-ext-enable exif
  script:
    # Install Composer dependencies optimized for production
    - echo "Installing Composer dependencies..."
    - composer update --no-dev --optimize-autoloader

    # Generate the list of changed files
    - echo "Generating list of changed files..."
    - git diff --name-only HEAD~1 > changed-files.txt
    - echo "Changed files:"
    - cat changed-files.txt

    # Upload only changed files while maintaining directory structure
    - echo "Uploading changed files..."
    - |
      while read file; do
        # Create directories if they don't exist
        lftp -u "$FTP_USERNAME","$FTP_PASSWORD" "$FTP_SERVER" -e "
        set ftp:ssl-force true;
        set ftp:ssl-protect-data true;
        set ftp:ssl-allow yes;
        set ssl:verify-certificate no;
        mkdir -p /public_html/dhr-solutions/$(dirname $file); bye;
        " || echo "Directory already exists: $(dirname $file)"

        # Upload the file to the correct directory
        lftp -u "$FTP_USERNAME","$FTP_PASSWORD" "$FTP_SERVER" -e "
        set ftp:ssl-force true;
        set ftp:ssl-protect-data true;
        set ftp:ssl-allow yes;
        set ssl:verify-certificate no;
        put -O /public_html/dhr-solutions/$(dirname $file) $file; bye;
        "
      done < changed-files.txt
    - echo "Deployment completed successfully!"
  timeout: 1h
